{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../sockat-service/sockat.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ChatComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const msg_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(msg_r1);\n  }\n}\n// import { SocketService } from '../services/socket.service';\nexport class ChatComponent {\n  constructor(socketService) {\n    this.socketService = socketService;\n    this.messages = [];\n    this.message = '';\n    this.socketService.onMessage(msg => this.messages.push(msg));\n  }\n  sendMessage() {\n    if (this.message.trim()) {\n      this.socketService.sendMessage(this.message);\n      this.message = '';\n    }\n  }\n  static {\n    this.ɵfac = function ChatComponent_Factory(t) {\n      return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.SocketService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatComponent,\n      selectors: [[\"app-chat\"]],\n      decls: 4,\n      vars: 2,\n      consts: [[4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Type a message\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [3, \"click\"]],\n      template: function ChatComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, ChatComponent_div_0_Template, 2, 1, \"div\", 0);\n          i0.ɵɵelementStart(1, \"input\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_1_listener($event) {\n            return ctx.message = $event;\n          })(\"keyup.enter\", function ChatComponent_Template_input_keyup_enter_1_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_2_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ɵɵtext(3, \"Send\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.message);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","msg_r1","ChatComponent","constructor","socketService","messages","message","onMessage","msg","push","sendMessage","trim","ɵɵdirectiveInject","i1","SocketService","selectors","decls","vars","consts","template","ChatComponent_Template","rf","ctx","ɵɵtemplate","ChatComponent_div_0_Template","ɵɵlistener","ChatComponent_Template_input_ngModelChange_1_listener","$event","ChatComponent_Template_input_keyup_enter_1_listener","ChatComponent_Template_button_click_2_listener","ɵɵproperty"],"sources":["C:\\Users\\DAY\\Desktop\\test-angular\\test-angular\\src\\app\\chat\\chat.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SocketService } from '../sockat-service/sockat.service';\n// import { SocketService } from '../services/socket.service';\n\n@Component({\n  selector: 'app-chat',\n  template: `\n    <div *ngFor=\"let msg of messages\">{{ msg }}</div>\n    <input [(ngModel)]=\"message\" (keyup.enter)=\"sendMessage()\" placeholder=\"Type a message\" />\n    <button (click)=\"sendMessage()\">Send</button>\n  `,\n})\nexport class ChatComponent {\n  messages: string[] = [];\n  message: string = '';\n\n  constructor(private socketService: SocketService) {\n    this.socketService.onMessage((msg) => this.messages.push(msg));\n  }\n\n  sendMessage() {\n    if (this.message.trim()) {\n      this.socketService.sendMessage(this.message);\n      this.message = '';\n    }\n  }\n}\n"],"mappings":";;;;;;IAOIA,EAAA,CAAAC,cAAA,UAAkC;IAAAD,EAAA,CAAAE,MAAA,GAAS;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAAfH,EAAA,CAAAI,SAAA,GAAS;IAATJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAS;;;AAL/C;AAUA,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAHjC,KAAAC,QAAQ,GAAa,EAAE;IACvB,KAAAC,OAAO,GAAW,EAAE;IAGlB,IAAI,CAACF,aAAa,CAACG,SAAS,CAAEC,GAAG,IAAK,IAAI,CAACH,QAAQ,CAACI,IAAI,CAACD,GAAG,CAAC,CAAC;EAChE;EAEAE,WAAWA,CAAA;IACT,IAAI,IAAI,CAACJ,OAAO,CAACK,IAAI,EAAE,EAAE;MACvB,IAAI,CAACP,aAAa,CAACM,WAAW,CAAC,IAAI,CAACJ,OAAO,CAAC;MAC5C,IAAI,CAACA,OAAO,GAAG,EAAE;;EAErB;;;uBAbWJ,aAAa,EAAAP,EAAA,CAAAiB,iBAAA,CAAAC,EAAA,CAAAC,aAAA;IAAA;EAAA;;;YAAbZ,aAAa;MAAAa,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UALtB1B,EAAA,CAAA4B,UAAA,IAAAC,4BAAA,iBAAiD;UACjD7B,EAAA,CAAAC,cAAA,eAA0F;UAAnFD,EAAA,CAAA8B,UAAA,2BAAAC,sDAAAC,MAAA;YAAA,OAAAL,GAAA,CAAAhB,OAAA,GAAAqB,MAAA;UAAA,EAAqB,yBAAAC,oDAAA;YAAA,OAAgBN,GAAA,CAAAZ,WAAA,EAAa;UAAA,EAA7B;UAA5Bf,EAAA,CAAAG,YAAA,EAA0F;UAC1FH,EAAA,CAAAC,cAAA,gBAAgC;UAAxBD,EAAA,CAAA8B,UAAA,mBAAAI,+CAAA;YAAA,OAASP,GAAA,CAAAZ,WAAA,EAAa;UAAA,EAAC;UAACf,EAAA,CAAAE,MAAA,WAAI;UAAAF,EAAA,CAAAG,YAAA,EAAS;;;UAFxBH,EAAA,CAAAmC,UAAA,YAAAR,GAAA,CAAAjB,QAAA,CAAW;UACzBV,EAAA,CAAAI,SAAA,GAAqB;UAArBJ,EAAA,CAAAmC,UAAA,YAAAR,GAAA,CAAAhB,OAAA,CAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}