{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/forms\";\n// import { AuthService } from '../services/auth.service';\nexport class LoginComponent {\n  constructor(authSer) {\n    this.authSer = authSer;\n    this.username = '';\n    this.password = '';\n  }\n  onLogin() {\n    this.authSer.login(this.username, this.password).subscribe(response => console.log('Logged in!', response), error => console.error('Login failed', error));\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 5,\n      vars: 2,\n      consts: [[3, \"ngSubmit\"], [\"name\", \"username\", \"placeholder\", \"Username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"password\", \"placeholder\", \"Password\", \"type\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onLogin();\n          });\n          i0.ɵɵelementStart(1, \"input\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_1_listener($event) {\n            return ctx.username = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_2_listener($event) {\n            return ctx.password = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"button\", 3);\n          i0.ɵɵtext(4, \"Login\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.password);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["LoginComponent","constructor","authSer","username","password","onLogin","login","subscribe","response","console","log","error","i0","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","LoginComponent_Template_input_ngModelChange_1_listener","$event","ɵɵelementEnd","LoginComponent_Template_input_ngModelChange_2_listener","ɵɵtext","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\DAY\\Desktop\\test-angular\\test-angular\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\n// import { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  template: `\n    <form (ngSubmit)=\"onLogin()\">\n      <input [(ngModel)]=\"username\" name=\"username\" placeholder=\"Username\" required />\n      <input [(ngModel)]=\"password\" name=\"password\" placeholder=\"Password\" type=\"password\" required />\n      <button type=\"submit\">Login</button>\n    </form>\n  `,\n})\nexport class LoginComponent {\n  username = '';\n  password = '';\n\n  constructor(private authSer: AuthService) {}\n\n  onLogin() {\n    this.authSer.login(this.username, this.password).subscribe(\n      (response: any) => console.log('Logged in!', response),\n      (error: any) => console.error('Login failed', error)\n    );\n  }\n}\n"],"mappings":";;;AAEA;AAYA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,OAAoB;IAApB,KAAAA,OAAO,GAAPA,OAAO;IAH3B,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAC,QAAQ,GAAG,EAAE;EAE8B;EAE3CC,OAAOA,CAAA;IACL,IAAI,CAACH,OAAO,CAACI,KAAK,CAAC,IAAI,CAACH,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACG,SAAS,CACvDC,QAAa,IAAKC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,QAAQ,CAAC,EACrDG,KAAU,IAAKF,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC,CACrD;EACH;;;uBAXWX,cAAc,EAAAY,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAdf,cAAc;MAAAgB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAPvBV,EAAA,CAAAY,cAAA,cAA6B;UAAvBZ,EAAA,CAAAa,UAAA,sBAAAC,iDAAA;YAAA,OAAYH,GAAA,CAAAlB,OAAA,EAAS;UAAA,EAAC;UAC1BO,EAAA,CAAAY,cAAA,eAAgF;UAAzEZ,EAAA,CAAAa,UAAA,2BAAAE,uDAAAC,MAAA;YAAA,OAAAL,GAAA,CAAApB,QAAA,GAAAyB,MAAA;UAAA,EAAsB;UAA7BhB,EAAA,CAAAiB,YAAA,EAAgF;UAChFjB,EAAA,CAAAY,cAAA,eAAgG;UAAzFZ,EAAA,CAAAa,UAAA,2BAAAK,uDAAAF,MAAA;YAAA,OAAAL,GAAA,CAAAnB,QAAA,GAAAwB,MAAA;UAAA,EAAsB;UAA7BhB,EAAA,CAAAiB,YAAA,EAAgG;UAChGjB,EAAA,CAAAY,cAAA,gBAAsB;UAAAZ,EAAA,CAAAmB,MAAA,YAAK;UAAAnB,EAAA,CAAAiB,YAAA,EAAS;;;UAF7BjB,EAAA,CAAAoB,SAAA,GAAsB;UAAtBpB,EAAA,CAAAqB,UAAA,YAAAV,GAAA,CAAApB,QAAA,CAAsB;UACtBS,EAAA,CAAAoB,SAAA,GAAsB;UAAtBpB,EAAA,CAAAqB,UAAA,YAAAV,GAAA,CAAAnB,QAAA,CAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}