{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../image-upload.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"videoElement\"];\nconst _c1 = [\"canvasElement\"];\nfunction CameraComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const image_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", image_r3, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class CameraComponent {\n  constructor(imageUploadService) {\n    this.imageUploadService = imageUploadService;\n    this.capturedImages = [];\n  }\n  ngOnInit() {\n    this.startCamera();\n    console.log('pageload');\n    // this.capturedImages = JSON.parse(localStorage.getItem('capturedImages') || '[]');\n  }\n\n  ngOnDestroy() {\n    this.stopCamera();\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n  }\n  startCamera() {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      this.stream = stream;\n      this.videoElement.nativeElement.srcObject = stream;\n      // Start capturing images every 5 seconds\n      this.intervalId = setInterval(() => {\n        this.captureImage();\n      }, 5000);\n    }).catch(error => {\n      console.error('Error accessing camera:', error);\n    });\n  }\n  stopCamera() {\n    if (this.stream) {\n      const tracks = this.stream.getTracks();\n      tracks.forEach(track => track.stop());\n    }\n  }\n  captureImage() {\n    const video = this.videoElement.nativeElement;\n    const canvas = this.canvasElement.nativeElement;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext('2d');\n    context?.drawImage(video, 0, 0, canvas.width, canvas.height);\n    // Get the image as a data URL and store it in localStorage\n    const imageData = canvas.toDataURL('image/png');\n    const images = JSON.parse(localStorage.getItem('capturedImages') || '[]');\n    images.push(imageData);\n    localStorage.setItem('capturedImages', JSON.stringify(images));\n    this.capturedImages.push(imageData);\n    // Send the image to the backend\n    this.imageUploadService.uploadImage(imageData).subscribe({\n      next: response => {\n        console.log('Image uploaded successfully:', response);\n      },\n      error: error => {\n        console.error('Error uploading image:', error);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function CameraComponent_Factory(t) {\n      return new (t || CameraComponent)(i0.ɵɵdirectiveInject(i1.ImageUploadService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CameraComponent,\n      selectors: [[\"app-camera\"]],\n      viewQuery: function CameraComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n          i0.ɵɵviewQuery(_c1, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.videoElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvasElement = _t.first);\n        }\n      },\n      decls: 9,\n      vars: 1,\n      consts: [[1, \"camera-container\"], [\"autoplay\", \"\"], [\"videoElement\", \"\"], [2, \"display\", \"none\"], [\"canvasElement\", \"\"], [1, \"preview\"], [4, \"ngFor\", \"ngForOf\"], [\"alt\", \"Captured Image\", 3, \"src\"]],\n      template: function CameraComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"video\", 1, 2)(3, \"canvas\", 3, 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 5)(6, \"h3\");\n          i0.ɵɵtext(7, \"Captured Images:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(8, CameraComponent_div_8_Template, 2, 1, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngForOf\", ctx.capturedImages);\n        }\n      },\n      dependencies: [i2.NgForOf],\n      styles: [\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n   .camera-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    flex-direction: column;\\n    margin-top: 20px;\\n  }\\n  \\n  video[_ngcontent-%COMP%] {\\n    width: 100%;\\n    max-width: 500px;\\n    border: 2px solid #ccc;\\n    border-radius: 5px;\\n  }\\n  \\n  canvas[_ngcontent-%COMP%] {\\n    display: none;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FtZXJhL2NhbWVyYS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7SUFTSTtHQUNEO0lBQ0MsYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxnQkFBZ0I7SUFDaEIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGFBQWE7RUFDZiIsInNvdXJjZXNDb250ZW50IjpbIi8qIC5jYW1lcmEtY29udGFpbmVyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIHZpZGVvIHtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgfVxyXG4gICAqL1xyXG4gICAuY2FtZXJhLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIHZpZGVvIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIGNhbnZhcyB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","image_r3","ɵɵsanitizeUrl","CameraComponent","constructor","imageUploadService","capturedImages","ngOnInit","startCamera","console","log","ngOnDestroy","stopCamera","intervalId","clearInterval","navigator","mediaDevices","getUserMedia","video","then","stream","videoElement","nativeElement","srcObject","setInterval","captureImage","catch","error","tracks","getTracks","forEach","track","stop","canvas","canvasElement","width","videoWidth","height","videoHeight","context","getContext","drawImage","imageData","toDataURL","images","JSON","parse","localStorage","getItem","push","setItem","stringify","uploadImage","subscribe","next","response","ɵɵdirectiveInject","i1","ImageUploadService","selectors","viewQuery","CameraComponent_Query","rf","ctx","ɵɵtext","ɵɵtemplate","CameraComponent_div_8_Template"],"sources":["C:\\Users\\DAY\\Desktop\\test-angular\\test-angular\\src\\app\\camera\\camera.component.ts","C:\\Users\\DAY\\Desktop\\test-angular\\test-angular\\src\\app\\camera\\camera.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { ImageUploadService } from '../image-upload.service';\n\n@Component({\n  selector: 'app-camera',\n  templateUrl: './camera.component.html',\n  styleUrls: ['./camera.component.css']\n})\nexport class CameraComponent implements OnInit, OnDestroy {\n  // videoElement!: HTMLVideoElement ;\n  // stream: MediaStream | null = null;\n\n  // ngOnInit(): void {\n  //   this.startCamera();\n  //   const selectedText = window.getSelection()?.toString();\n  //   const textArea:any = document.createElement('textarea');\n  //   document.body.appendChild(textArea);\n  //   textArea.value = selectedText;\n  //   textArea.select();\n  //   document.execCommand('copy');\n  //   console.log(document.execCommand('copy'))\n  // }\n\n  // ngOnDestroy(): void {\n  //   this.stopCamera();\n  // }\n\n  // // Start the camera\n  // startCamera() {\n  //   navigator.mediaDevices.getUserMedia({ video: true })\n  //     .then((stream) => {\n  //       this.stream = stream;\n  //       this.videoElement = document.querySelector('video')!;\n  //       this.videoElement.srcObject = stream;\n  //     })\n  //     .catch((error) => {\n  //       console.log(error,'009909')\n  //       console.error('Error accessing camera:', error);\n  //     })\n  // }\n\n  // // Stop the camera\n  // stopCamera() {\n  //   if (this.stream) {\n  //     const tracks = this.stream.getTracks();\n  //     tracks.forEach((track) => track.stop());\n  //   }\n  // }\n  @ViewChild('videoElement', { static: true }) videoElement!: ElementRef;\n  @ViewChild('canvasElement', { static: true }) canvasElement!: ElementRef;\n  private stream!: MediaStream;\n  private intervalId!: any;\n  constructor(private imageUploadService:ImageUploadService){\n\n  }\n  capturedImages: string[] = [];\n  ngOnInit(): void {\n    this.startCamera();\n    console.log('pageload')\n   // this.capturedImages = JSON.parse(localStorage.getItem('capturedImages') || '[]');\n  }\n\n  ngOnDestroy(): void {\n    this.stopCamera();\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n  }\n\n  startCamera(): void {\n    navigator.mediaDevices\n      .getUserMedia({ video: true })\n      .then((stream: MediaStream) => {\n        this.stream = stream;\n        this.videoElement.nativeElement.srcObject = stream;\n\n        // Start capturing images every 5 seconds\n        this.intervalId = setInterval(() => {\n          this.captureImage();\n        }, 5000);\n      })\n      .catch((error) => {\n        console.error('Error accessing camera:', error);\n      });\n  }\n\n  stopCamera(): void {\n    if (this.stream) {\n      const tracks = this.stream.getTracks();\n      tracks.forEach((track) => track.stop());\n    }\n  }\n\n  captureImage(): void {\n    const video = this.videoElement.nativeElement;\n    const canvas = this.canvasElement.nativeElement;\n\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    const context = canvas.getContext('2d');\n    context?.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    // Get the image as a data URL and store it in localStorage\n    const imageData = canvas.toDataURL('image/png');\n    const images = JSON.parse(localStorage.getItem('capturedImages') || '[]');\n    images.push(imageData);\n    localStorage.setItem('capturedImages', JSON.stringify(images));\n    this.capturedImages.push(imageData);\n     // Send the image to the backend\n     this.imageUploadService.uploadImage(imageData).subscribe({\n      next: (response) => {\n        console.log('Image uploaded successfully:', response);\n      },\n      error: (error) => {\n        console.error('Error uploading image:', error);\n      },\n    });\n  }\n}\n","<!-- <p>camera works!</p>\n<div class=\"camera-container\">\n    <video width=\"100%\" height=\"auto\" autoplay></video>\n  </div> -->\n  <div class=\"camera-container\">\n    <video #videoElement autoplay></video>\n    <canvas #canvasElement style=\"display: none;\"></canvas>\n  </div>\n  <div class=\"preview\">\n    <h3>Captured Images:</h3>\n    <div *ngFor=\"let image of capturedImages\">\n      <img [src]=\"image\" alt=\"Captured Image\" />\n    </div>\n  </div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}