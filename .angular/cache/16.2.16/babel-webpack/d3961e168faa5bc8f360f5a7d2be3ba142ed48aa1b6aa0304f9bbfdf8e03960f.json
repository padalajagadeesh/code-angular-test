{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(username, password) {\n    return this.http.post('http://localhost:3000/login', {\n      username,\n      password\n    });\n  }\n  register(username, password) {\n    return this.http.post('http://localhost:3000/register', {\n      username,\n      password\n    });\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthService","constructor","http","login","username","password","post","register","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\DAY\\Desktop\\test-angular\\test-angular\\src\\app\\auth-service\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  login(username: string, password: string) {\n    return this.http.post('http://localhost:3000/login', { username, password });\n  }\n\n  register(username: string, password: string) {\n    return this.http.post('http://localhost:3000/register', { username, password });\n  }\n}\n"],"mappings":";;AAIA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,6BAA6B,EAAE;MAAEF,QAAQ;MAAEC;IAAQ,CAAE,CAAC;EAC9E;EAEAE,QAAQA,CAACH,QAAgB,EAAEC,QAAgB;IACzC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,gCAAgC,EAAE;MAAEF,QAAQ;MAAEC;IAAQ,CAAE,CAAC;EACjF;;;uBATWL,WAAW,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXX,WAAW;MAAAY,OAAA,EAAXZ,WAAW,CAAAa,IAAA;MAAAC,UAAA,EADE;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}