{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RegisterComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\n// import { AuthService } from '../services/auth.service';\nexport class RegisterComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.username = '';\n    this.password = '';\n    this.confirmPassword = '';\n    this.errorMessage = '';\n  }\n  onRegister() {\n    if (this.password !== this.confirmPassword) {\n      this.errorMessage = 'Passwords do not match';\n      return;\n    }\n    this.authService.register(this.username, this.password).subscribe(response => {\n      console.log('Registration successful', response);\n      this.errorMessage = ''; // Clear error on success\n    }, error => {\n      console.error('Registration failed', error);\n      this.errorMessage = 'Registration failed. Try again.';\n    });\n  }\n  static {\n    this.ɵfac = function RegisterComponent_Factory(t) {\n      return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      decls: 18,\n      vars: 4,\n      consts: [[3, \"ngSubmit\"], [\"for\", \"username\"], [\"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"name\", \"password\", \"type\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"confirmPassword\"], [\"name\", \"confirmPassword\", \"type\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Register\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.onRegister();\n          });\n          i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n          i0.ɵɵtext(5, \"Username:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_6_listener($event) {\n            return ctx.username = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n          i0.ɵɵtext(9, \"Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_10_listener($event) {\n            return ctx.password = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\")(12, \"label\", 5);\n          i0.ɵɵtext(13, \"Confirm Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_14_listener($event) {\n            return ctx.confirmPassword = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"button\", 7);\n          i0.ɵɵtext(16, \"Register\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(17, RegisterComponent_div_17_Template, 2, 1, \"div\", 8);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.confirmPassword);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        }\n      },\n      dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","RegisterComponent","constructor","authService","username","password","confirmPassword","onRegister","register","subscribe","response","console","log","error","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_2_listener","RegisterComponent_Template_input_ngModelChange_6_listener","$event","RegisterComponent_Template_input_ngModelChange_10_listener","RegisterComponent_Template_input_ngModelChange_14_listener","ɵɵtemplate","RegisterComponent_div_17_Template","ɵɵproperty"],"sources":["C:\\Users\\DAY\\Desktop\\test-angular\\test-angular\\src\\app\\register\\register.component.ts","C:\\Users\\DAY\\Desktop\\test-angular\\test-angular\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\n// import { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent {\n  username: string = '';\n  password: string = '';\n  confirmPassword: string = '';\n  errorMessage: string = '';\n\n  constructor(private authService: AuthService) {}\n\n  onRegister() {\n    if (this.password !== this.confirmPassword) {\n      this.errorMessage = 'Passwords do not match';\n      return;\n    }\n\n    this.authService.register(this.username, this.password).subscribe(\n      (response) => {\n        console.log('Registration successful', response);\n        this.errorMessage = ''; // Clear error on success\n      },\n      (error) => {\n        console.error('Registration failed', error);\n        this.errorMessage = 'Registration failed. Try again.';\n      }\n    );\n  }\n}\n","<h2>Register</h2>\n<form (ngSubmit)=\"onRegister()\">\n  <div>\n    <label for=\"username\">Username:</label>\n    <input [(ngModel)]=\"username\" name=\"username\" required />\n  </div>\n  <div>\n    <label for=\"password\">Password:</label>\n    <input [(ngModel)]=\"password\" name=\"password\" type=\"password\" required />\n  </div>\n  <div>\n    <label for=\"confirmPassword\">Confirm Password:</label>\n    <input [(ngModel)]=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" required />\n  </div>\n  <button type=\"submit\">Register</button>\n</form>\n<div *ngIf=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}