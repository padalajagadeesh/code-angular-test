{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../table.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction FormComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" enter the firstName \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" enter the lastName \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" enter the Email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" enter the ConformEmail \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function FormComponent_button_18_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.formSubmit());\n    });\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function FormComponent_button_19_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.update());\n    });\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let FormComponent = /*#__PURE__*/(() => {\n  class FormComponent {\n    constructor(fb, tableServie, http, router) {\n      this.fb = fb;\n      this.tableServie = tableServie;\n      this.http = http;\n      this.router = router;\n      this.value = false;\n      this.updateData = [];\n    }\n    ngOnInit() {\n      this.userForm = this.fb.group({\n        fName: ['', Validators.required],\n        LName: ['', Validators.required],\n        email: ['', Validators.required],\n        cEmail: ['', Validators.required]\n      });\n      this.userForm2 = this.fb.group({\n        ufName: ['', Validators.required],\n        uLName: ['', Validators.required],\n        items: this.fb.array([])\n      });\n      console.log(this.userForm2, '5555');\n      this.getData = this.tableServie.returnData();\n      console.log(this.getData, '33333');\n      if (this.getData) {\n        // this.userForm.controls['fName'].setValue(this.getData.fName)\n        // this.userForm.controls['LName'].setValue(this.getData.LName)\n        // this.userForm.controls['email'].setValue(this.getData.email)\n        // this.userForm.controls['cEmail'].setValue(this.getData.cEmail)\n        this.userForm.patchValue({\n          fName: this.getData.items.fName,\n          LName: this.getData.items.LName,\n          email: this.getData.items.email,\n          cEmail: this.getData.items.cEmail\n        });\n      }\n    }\n    formSubmit() {\n      if (this.userForm.invalid) {\n        console.log(this.userForm, '4444');\n        // Mark all controls as touched to trigger error messages\n        this.userForm.markAllAsTouched();\n      } else {\n        console.log('767676');\n        // Handle valid form submission\n        this.updateData.push(this.userForm.value);\n        this.tableServie.data(this.userForm.value);\n        this.router.navigate(['/table']);\n        console.log(this.updateData, 'Form Submitted:', this.userForm.value);\n        // this.http.\n      }\n    }\n\n    name() {\n      console.log(this.userForm.controls['fName'].value === '123', '00909');\n      if (this.userForm.controls['fName'].value === '123') {\n        this.value = true;\n        this.userForm.get('LName')?.disable();\n      } else {\n        this.value = false;\n        this.userForm.get('LName')?.enable();\n      }\n    }\n    get hobbies() {\n      return this.userForm2.get('items');\n    }\n    addHobby() {\n      this.hobbies.push(this.fb.control('', Validators.required));\n    }\n    removeHobby(index) {\n      this.hobbies.removeAt(index);\n    }\n    update() {\n      // let data = this.tableServie.updateData()\n      console.log(this.getData, '9999');\n      // const newData = data[this.getData.index]\n      // this.tableServie.data(newData)\n      this.router.navigate(['/table']);\n    }\n    static {\n      this.ɵfac = function FormComponent_Factory(t) {\n        return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TableService), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: FormComponent,\n        selectors: [[\"app-form\"]],\n        decls: 20,\n        vars: 7,\n        consts: [[1, \"minaParent\"], [3, \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"fName\", 3, \"keyup\"], [4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"LName\"], [\"type\", \"text\", \"formControlName\", \"email\"], [\"type\", \"text\", \"formControlName\", \"cEmail\"], [3, \"click\", 4, \"ngIf\"], [3, \"click\"]],\n        template: function FormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"label\");\n            i0.ɵɵtext(3, \" firstName \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"input\", 2);\n            i0.ɵɵlistener(\"keyup\", function FormComponent_Template_input_keyup_4_listener() {\n              return ctx.name();\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(5, FormComponent_div_5_Template, 2, 0, \"div\", 3);\n            i0.ɵɵelementStart(6, \"label\");\n            i0.ɵɵtext(7, \" lastName \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(8, \"input\", 4);\n            i0.ɵɵtemplate(9, FormComponent_div_9_Template, 2, 0, \"div\", 3);\n            i0.ɵɵelementStart(10, \"label\");\n            i0.ɵɵtext(11, \" Email \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(12, \"input\", 5);\n            i0.ɵɵtemplate(13, FormComponent_div_13_Template, 2, 0, \"div\", 3);\n            i0.ɵɵelementStart(14, \"label\");\n            i0.ɵɵtext(15, \" ConformEmail \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(16, \"input\", 6);\n            i0.ɵɵtemplate(17, FormComponent_div_17_Template, 2, 0, \"div\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(18, FormComponent_button_18_Template, 2, 0, \"button\", 7);\n            i0.ɵɵtemplate(19, FormComponent_button_19_Template, 2, 0, \"button\", 7);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            let tmp_2_0;\n            let tmp_3_0;\n            let tmp_4_0;\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.userForm.get(\"fName\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx.userForm.get(\"fName\")) == null ? null : tmp_1_0.invalid));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.userForm.get(\"LName\")) == null ? null : tmp_2_0.touched) && ((tmp_2_0 = ctx.userForm.get(\"LName\")) == null ? null : tmp_2_0.invalid));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_3_0.touched) && ((tmp_3_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_3_0.invalid));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.userForm.get(\"cEmail\")) == null ? null : tmp_4_0.touched) && ((tmp_4_0 = ctx.userForm.get(\"cEmail\")) == null ? null : tmp_4_0.invalid));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !(ctx.getData == null ? null : ctx.getData.flag));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.getData == null ? null : ctx.getData.flag);\n          }\n        },\n        dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\"body[_ngcontent-%COMP%]{font-family:Arial,sans-serif;background-color:#f4f7fc;margin:0;padding:0;box-sizing:border-box}.minaParent[_ngcontent-%COMP%]{background-color:#fff;max-width:600px;margin:40px auto;padding:20px;border-radius:8px;box-shadow:0 4px 10px #0000001a}form[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:15px}label[_ngcontent-%COMP%]{font-size:14px;font-weight:700;color:#333;margin-bottom:5px;padding-left:5px}input[_ngcontent-%COMP%]{padding:10px;font-size:16px;border:1px solid #ccc;border-radius:4px;background-color:#f9f9f9;transition:all .3s ease}input[_ngcontent-%COMP%]:focus{border-color:#5e72e4;background-color:#fff;outline:none}div[_ngcontent-%COMP%]{font-size:12px;color:#ff4d4d;padding-left:5px}button[type=submit][_ngcontent-%COMP%], button[type=button][_ngcontent-%COMP%]{padding:12px 20px;font-size:16px;background-color:#5e72e4;color:#fff;border:none;border-radius:4px;cursor:pointer;transition:background-color .3s ease}button[type=submit][_ngcontent-%COMP%]:hover, button[type=button][_ngcontent-%COMP%]:hover{background-color:#4b61cc}\"]\n      });\n    }\n  }\n  return FormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}